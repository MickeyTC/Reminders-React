{"version":3,"sources":["components/TodoDetail.js","components/TodoListItem.js","components/TodoList.js","actions/expandCompleted.js","constants/actionTypes.js","actions/todoList.js","components/TodoAdd.js","App.js","registerServiceWorker.js","reducers/initialState.js","reducers/todoList.js","reducers/expandCompleted.js","reducers/index.js","store/configureStore.js","index.js","logo.svg"],"names":["TodoDetail","state","id","title","description","shortDate","shortTime","handleChangeText","event","value","target","name","setState","prevState","moment","format","handleSubmit","newTodo","completed","props","todo","newMoment","date","onSave","preventDefault","newProps","this","classes","open","dialogTitle","onCancel","Dialog","onClose","onSubmit","DialogTitle","DialogContent","TextField","label","margin","disabled","fullWidth","onChange","autoFocus","multiline","rows","className","dueContainer","type","dateInput","InputLabelProps","shrink","timeInput","DialogActions","dialogAction","Button","variant","size","color","rightIcon","Component","withStyles","theme","justifyContent","display","flexGrow","marginLeft","spacing","unit","TodoListItem","openDetail","handleClickOpenDetail","handleCancel","handleSave","onUpdateTodo","onToggleCompleted","onDeleteTodo","ListItem","button","onClick","Checkbox","checked","disableRipple","ListItemText","primary","primaryTypographyProps","noWrap","secondary","fromNow","secondaryTypographyProps","ListItemSecondaryAction","IconButton","TodoList","todoList","expandCompleted","onCompletedClick","nonCompletedTodoList","filter","completedTodoList","numCompleted","length","listItem","list","map","key","listContainer","Paper","elevation","todoPaper","List","disablePadding","Avatar","countAvatar","toString","Collapse","in","timeout","connect","dispatch","toggleTodoCompleted","deleteTodo","updateTodo","maxWidth","width","backgroundColor","marginRight","marginTop","marginBottom","TodoAdd","openAddTodo","todoID","uniqid","handleClickAdd","onAddTodo","addTodo","App","src","logo","alt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initialState","action","newTodoList","push","idxTodo","findIndex","splice","deletedTodoList","foundTodo","find","undefined","combineReducers","persistConfig","storage","persistedReducer","persistReducer","reducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"ieAcMA,E,4MACJC,MAAQ,CACNC,GAAI,GACJC,MAAO,GACPC,YAAa,GACbC,UAAW,GACXC,UAAW,I,EAqCbC,iBAAmB,SAAAC,GACjB,IACMC,EADSD,EAAME,OACAD,MACfE,EAAOH,EAAME,OAAOC,KAE1B,EAAKC,UAAS,SAAAC,GACZ,MAAa,cAATF,GAAgD,KAAxBE,EAAUP,WAA8B,KAAVG,EACjD,2BACFI,GADL,IAEER,UAAWI,EACXH,UAAW,UAGF,cAATK,GAAgD,KAAxBE,EAAUR,WAA8B,KAAVI,EACjD,2BACFI,GADL,IAEER,UAAWS,MAASC,OAAO,cAC3BT,UAAWG,IAGR,2BACFI,GADL,kBAEGF,EAAOF,Q,EAKdO,aAAe,SAAAR,GACb,IAAMS,EAAU,CACdf,GAAI,EAAKD,MAAMC,GACfC,MAAO,EAAKF,MAAME,MAClBC,YAAa,EAAKH,MAAMG,YACxBc,UAAW,EAAKC,MAAMC,KAAKF,WAEzBG,EAAY,KACa,KAAzB,EAAKpB,MAAMI,WAA6C,KAAzB,EAAKJ,MAAMK,UAC5Ce,EAAYP,IAAO,EAAKb,MAAMI,UAAW,cACP,KAAzB,EAAKJ,MAAMI,WAA6C,KAAzB,EAAKJ,MAAMK,UACnDe,EAAYP,IAAO,EAAKb,MAAMK,UAAW,SACP,KAAzB,EAAKL,MAAMI,WAA6C,KAAzB,EAAKJ,MAAMK,YACnDe,EAAYP,IAAO,GAAD,OACb,EAAKb,MAAMI,UADE,YACW,EAAKJ,MAAMK,WACtC,qBAGJW,EAAQK,KACQ,OAAdD,EAAqBA,EAAUN,OAAO,sBAAwB,GAChE,EAAKI,MAAMI,OAAON,GAClBT,EAAMgB,kB,wEAnEkBC,GACxB,IAAML,EAAOK,EAASL,KACtBM,KAAKd,SAAS,CACZV,GAAIkB,EAAKlB,GACTC,MAAOiB,EAAKjB,MACZC,YAAagB,EAAKhB,YAClBC,UACyB,KAAvBoB,EAASL,KAAKE,KACV,GACAR,IAAOW,EAASL,KAAKE,KAAM,sBAAsBP,OAC/C,cAERT,UACyB,KAAvBmB,EAASL,KAAKE,KACV,GACAR,IAAOW,EAASL,KAAKE,KAAM,sBAAsBP,OAAO,a,+BAuDxD,IAAD,EAC0CW,KAAKP,MAA9CQ,EADD,EACCA,QAASC,EADV,EACUA,KAAMC,EADhB,EACgBA,YAAaC,EAD7B,EAC6BA,SACpC,OACE,kBAACC,EAAA,EAAD,CAAQH,KAAMA,EAAMI,QAAS,kBAAMF,MACjC,0BAAMG,SAAUP,KAAKV,cAClBa,GAAe,kBAACK,EAAA,EAAD,KAAcL,GAC9B,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEzB,KAAK,KACL0B,MAAM,KACNC,OAAO,QACPC,UAAQ,EACRC,WAAS,EACT/B,MAAOiB,KAAKzB,MAAMC,GAClBuC,SAAUf,KAAKnB,mBAEjB,kBAAC6B,EAAA,EAAD,CACEzB,KAAK,QACL0B,MAAM,QACNC,OAAO,QACPE,WAAS,EACT/B,MAAOiB,KAAKzB,MAAME,MAClBsC,SAAUf,KAAKnB,iBACfmC,WAAS,IAEX,kBAACN,EAAA,EAAD,CACEzB,KAAK,cACL0B,MAAM,cACNC,OAAO,QACPE,WAAS,EACTG,WAAS,EACTC,KAAK,IACLnC,MAAOiB,KAAKzB,MAAMG,YAClBqC,SAAUf,KAAKnB,mBAEjB,yBAAKsC,UAAWlB,EAAQmB,cACtB,kBAACV,EAAA,EAAD,CACEzB,KAAK,YACLoC,KAAK,OACLV,MAAM,WACNQ,UAAWlB,EAAQqB,UACnBV,OAAO,QACP7B,MAAOiB,KAAKzB,MAAMI,UAClBoC,SAAUf,KAAKnB,iBACf0C,gBAAiB,CACfC,QAAQ,KAGZ,kBAACd,EAAA,EAAD,CACEzB,KAAK,YACLoC,KAAK,OACLV,MAAM,OACNQ,UAAWlB,EAAQwB,UACnBb,OAAO,QACP7B,MAAOiB,KAAKzB,MAAMK,UAClBmC,SAAUf,KAAKnB,iBACf0C,gBAAiB,CACfC,QAAQ,OAKhB,kBAACE,EAAA,EAAD,CAAeP,UAAWlB,EAAQ0B,cAChC,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAK,QACLC,MAAM,UACNV,KAAK,UAJP,OAOE,kBAAC,IAAD,CAAUF,UAAWlB,EAAQ+B,oB,GApKlBC,aAgMVC,eAnBA,SAAAC,GAAK,MAAK,CACvBR,aAAc,CACZS,eAAgB,UAElBhB,aAAc,CACZiB,QAAS,OACTD,eAAgB,iBAElBd,UAAW,CACTgB,SAAU,GAEZb,UAAW,CACTa,SAAU,GAEZN,UAAW,CACTO,WAAYJ,EAAMK,QAAQC,SAIfP,CAAmB5D,GC3HnBoE,E,4MArEbnE,MAAQ,CACNoE,YAAY,G,EAgBdC,sBAAwB,WACtB,EAAK1D,SAAS,CAAEyD,YAAY,K,EAG9BE,aAAe,WACb,EAAK3D,SAAS,CAAEyD,YAAY,K,EAG9BG,WAAa,SAAApD,GACX,EAAKD,MAAMsD,aAAarD,GACxB,EAAKR,SAAS,CAAEyD,YAAY,K,uDAGpB,IAAD,EAC2C3C,KAAKP,MAA/CC,EADD,EACCA,KAAMsD,EADP,EACOA,kBAAmBC,EAD1B,EAC0BA,aACjC,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAASpD,KAAK4C,uBAC7B,kBAACS,EAAA,EAAD,CACEC,QAAS5D,EAAKF,UACd+D,eAAa,EACbxC,SAAU,kBAAMiC,EAAkBtD,EAAKlB,OAEzC,kBAACgF,EAAA,EAAD,CACEC,QAAS/D,EAAKjB,MACdiF,uBAAwB,CACtB3B,MAAOrC,EAAKF,UAAY,gBAAkB,UAC1CmE,QAAQ,GAEVC,UACElE,EAAKE,MAAQR,IAAOM,EAAKE,KAAM,sBAAsBiE,UAEvDC,yBAA0B,CAAEH,QAAQ,KAEtC,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYjC,MAAM,YAAYqB,QAAS,kBAAMH,EAAavD,EAAKlB,MAC7D,kBAAC,IAAD,SAIN,kBAAC,EAAD,CACEkB,KAAMA,EACNQ,KAAMF,KAAKzB,MAAMoE,WACjBxC,YAAY,gBACZC,SAAUJ,KAAK6C,aACfhD,OAAQG,KAAK8C,kB,GA/DIb,aCSrBgC,E,uKAmBM,IAAD,EASHjE,KAAKP,MAPPQ,EAFK,EAELA,QACAiE,EAHK,EAGLA,SACAC,EAJK,EAILA,gBACAC,EALK,EAKLA,iBACApB,EANK,EAMLA,kBACAC,EAPK,EAOLA,aACAF,EARK,EAQLA,aAEIsB,EAAuBH,EACzBA,EAASI,QAAO,SAAA5E,GAAI,OAAKA,EAAKF,aAC9B,GACE+E,EAAoBL,EACtBA,EAASI,QAAO,SAAA5E,GAAI,OAAIA,EAAKF,aAC7B,GACEgF,EAAeD,EAAkBE,OACjCC,EAAW,SAAAC,GACf,OAAOA,EAAKC,KAAI,SAAAlF,GACd,OACE,kBAAC,EAAD,CACEmF,IAAKnF,EAAKlB,GACVkB,KAAMA,EACNsD,kBAAmBA,EACnBC,aAAcA,EACdF,aAAcA,QAKtB,OACE,yBAAK5B,UAAWlB,EAAQ6E,eACrBT,EAAqBI,OAAS,GAC7B,kBAACM,EAAA,EAAD,CAAOC,UAAW,EAAG7D,UAAWlB,EAAQgF,WACtC,kBAACC,EAAA,EAAD,CAAMC,gBAAc,GAAET,EAASL,KAGnC,kBAACU,EAAA,EAAD,CAAOC,UAAW,EAAG7D,UAAWlB,EAAQgF,WACtC,kBAACC,EAAA,EAAD,CAAMC,gBAAc,GAClB,kBAACjC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAASgB,GACxB,kBAACgB,EAAA,EAAD,CAAQjE,UAAWlB,EAAQoF,aACxBb,EAAac,YAEhB,kBAAC9B,EAAA,EAAD,CACEC,QAAQ,YACRC,uBAAwB,CAAE7B,QAAS,WAAY8B,QAAQ,KAExDQ,EAAkB,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAEtC,kBAACoB,EAAA,EAAD,CAAUC,GAAIrB,EAAiBsB,QAAQ,QACrC,kBAACP,EAAA,EAAD,CAAMC,gBAAc,GAAET,EAASH,Y,GArEtBtC,aA8GRyD,eAhBS,SAAAnH,GACtB,MAAO,CACL2F,SAAU3F,EAAM2F,SAChBC,gBAAiB5F,EAAM4F,oBAIA,SAAAwB,GACzB,MAAO,CACLvB,iBAAkB,kBAAMuB,EC1HnB,CACLtE,KCCmC,6BFyHnC2B,kBAAmB,SAAAxE,GAAE,OAAImH,EGlGM,SAAAnH,GACjC,MAAO,CACL6C,KD3BiC,wBC4BjC7C,MH+FkCoH,CAAoBpH,KACtDyE,aAAc,SAAAzE,GAAE,OAAImH,EG1GE,SAAAnH,GACxB,MAAO,CACL6C,KDrBuB,cCsBvB7C,MHuG6BqH,CAAWrH,KACxCuE,aAAc,SAAArD,GAAI,OAAIiG,EGlHA,SAAAjG,GACxB,MAAO,CACL2B,KDfuB,cCgBvB3B,QH+G+BoG,CAAWpG,QAI/BgG,CAGbxD,YAnCa,CACb4C,cAAe,CACbiB,SAAU,QACVC,MAAO,QAETf,UAAW,CACTrE,OAAQ,SAEVyE,YAAa,CACXY,gBAAiB,UACjBC,YAAa,MACbC,UAAW,QACXC,aAAc,UAuBhBlE,CAAmB+B,I,kCI9HfoC,E,4MACJ9H,MAAQ,CACN+H,aAAa,EACbC,OAAQC,O,EAOVC,eAAiB,WACf,EAAKvH,SAAS,CAAEoH,aAAa,K,EAG/BzD,aAAe,WAEb,EAAK3D,SAAS,CAAEoH,aAAa,K,EAG/BxD,WAAa,SAAApD,GAEX,EAAKR,SAAS,CAAEoH,aAAa,EAAOC,OAAQC,QAC5C,EAAK/G,MAAMiH,UAAUhH,I,uDAIrB,IAAMA,EAAO,CACXlB,GAAIwB,KAAKzB,MAAMgI,OACf9H,MAAO,GACPC,YAAa,GACbkB,KAAM,GACNJ,WAAW,GAEb,OACE,kBAAC,WAAD,KACE,kBAACoC,EAAA,EAAD,CACEwB,QAASpD,KAAKyG,eACdpF,KAAK,SACLQ,QAAQ,cACRE,MAAM,WAEN,kBAAC,IAAD,MANF,gBASA,kBAAC,EAAD,CACErC,KAAMA,EACNQ,KAAMF,KAAKzB,MAAM+H,YACjBnG,YAAY,eACZC,SAAUJ,KAAK6C,aACfhD,OAAQG,KAAK8C,kB,GAjDDb,aA8DPyD,cACb,MAPyB,SAAAC,GACzB,MAAO,CACLe,UAAW,SAAAhH,GAAI,OAAIiG,ED5DA,SAAAjG,GACrB,MAAO,CACL2B,KDToB,WCUpB3B,QCyD4BiH,CAAQjH,QAIzBgG,CAGbW,GCnDaO,E,uKAfX,OACE,yBAAKzF,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAK0F,IAAKC,IAAM3F,UAAU,WAAW4F,IAAI,SACzC,wBAAI5F,UAAU,aAAd,oBAEF,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACb,kBAAC,EAAD,Y,GAVQc,aCIZ+E,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvJ,QACfiJ,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,aC/ElD,IACbnE,SAAU,GACVC,iBAAiB,GC8BJD,GAxBE,WAA4C,IAA3C3F,EAA0C,uDAAlC+J,GAAapE,SAAUqE,EAAW,uCACpDC,EAAcjK,EAAMqG,KAAI,SAAAlF,GAAI,sBAAUA,MAC5C,OAAQ6I,EAAOlH,MACb,INXoB,WMalB,OADAmH,EAAYC,KAAKF,EAAO7I,MACjB8I,EACT,INbuB,cMcrB,IAAME,EAAUF,EAAYG,WAAU,SAAAjJ,GAAI,OAAIA,EAAKlB,KAAO+J,EAAO7I,KAAKlB,MACtE,OAAiB,IAAbkK,EAAuBnK,GAC3BiK,EAAYI,OAAOF,EAAS,EAAGH,EAAO7I,MAC/B8I,GACT,INjBuB,cMkBrB,IAAMK,EAAkBL,EAAYlE,QAAO,SAAA5E,GAAI,OAAIA,EAAKlB,KAAO+J,EAAO/J,MACtE,OAAOqK,EACT,INnBiC,wBMoB/B,IAAMC,EAAYN,EAAYO,MAAK,SAAArJ,GAAI,OAAIA,EAAKlB,KAAO+J,EAAO/J,MAC9D,YAAkBwK,IAAdF,EAAgCvK,GACpCuK,EAAUtJ,WAAasJ,EAAUtJ,UAC1BgJ,GACT,QACE,OAAOjK,IChBE4F,GATS,WAAmD,IAAlD5F,EAAiD,uDAAzC+J,GAAanE,gBAAiBoE,EAAW,uCACxE,OAAQA,EAAOlH,MACb,IPAmC,0BOCjC,OAAQ9C,EACV,QACE,OAAOA,ICJE0K,gBAAgB,CAC7B/E,YACAC,qB,kBCDI+E,GAAgB,CACpBrE,IAAK,OACLsE,Q,QAAAA,GAEIC,GAAmBC,aAAeH,GAAeI,I,YAExC,WACb,IAAMC,EAAQC,aACZJ,GACAlC,OAAOuC,8BAAgCvC,OAAOuC,gCAGhD,MAAO,CAAEF,QAAOG,UADEC,aAAaJ,ICPJK,GAArBL,G,GAAAA,MAAOG,G,GAAAA,UAEfG,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,KAAD,CAAaQ,QAAS,KAAML,UAAWA,IACrC,kBAAC,EAAD,QAGJM,SAASC,eAAe,SNGX,WACb,GAA6C,kBAAmBzC,UAAW,CAGzE,GADkB,IAAI0C,IAAIC,mBAAwBjD,OAAOC,UAC3CiD,SAAWlD,OAAOC,SAASiD,OAIvC,OAGFlD,OAAOmD,iBAAiB,QAAQ,WAC9B,IAAM9C,EAAK,UAAM4C,mBAAN,sBAEPnD,KAiDV,SAAiCO,GAE/B+C,MAAM/C,GACHI,MAAK,SAAA4C,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CnD,UAAUC,cAAcmD,MAAMjD,MAAK,SAAAC,GACjCA,EAAaiD,aAAalD,MAAK,WAC7BT,OAAOC,SAAS2D,eAKpBxD,GAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEArEA4C,CAAwBxD,GAIxBC,UAAUC,cAAcmD,MAAMjD,MAAK,WACjCO,QAAQC,IACN,gHAMJb,GAAgBC,OM7BxByD,I,mBCnBAC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.ce9a6b64.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  withStyles,\r\n} from '@material-ui/core'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\n\r\nclass TodoDetail extends Component {\r\n  state = {\r\n    id: '',\r\n    title: '',\r\n    description: '',\r\n    shortDate: '',\r\n    shortTime: '',\r\n  }\r\n\r\n  static propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    todo: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string,\r\n      description: PropTypes.string,\r\n      date: PropTypes.string,\r\n      completed: PropTypes.bool,\r\n    }),\r\n    open: PropTypes.bool.isRequired,\r\n    dialogTitle: PropTypes.string,\r\n    onCancel: PropTypes.func,\r\n    onSave: PropTypes.func,\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    const todo = newProps.todo\r\n    this.setState({\r\n      id: todo.id,\r\n      title: todo.title,\r\n      description: todo.description,\r\n      shortDate:\r\n        newProps.todo.date === ''\r\n          ? ''\r\n          : moment(newProps.todo.date, 'YYYY-MM-DD HH:mm Z').format(\r\n              'YYYY-MM-DD'\r\n            ),\r\n      shortTime:\r\n        newProps.todo.date === ''\r\n          ? ''\r\n          : moment(newProps.todo.date, 'YYYY-MM-DD HH:mm Z').format('HH:mm'),\r\n    })\r\n  }\r\n\r\n  handleChangeText = event => {\r\n    const target = event.target\r\n    const value = target.value\r\n    const name = event.target.name\r\n    // console.log(name, value);\r\n    this.setState(prevState => {\r\n      if (name === 'shortDate' && prevState.shortTime === '' && value !== '') {\r\n        return {\r\n          ...prevState,\r\n          shortDate: value,\r\n          shortTime: '00:00',\r\n        }\r\n      }\r\n      if (name === 'shortTime' && prevState.shortDate === '' && value !== '') {\r\n        return {\r\n          ...prevState,\r\n          shortDate: moment().format('YYYY-MM-DD'),\r\n          shortTime: value,\r\n        }\r\n      }\r\n      return {\r\n        ...prevState,\r\n        [name]: value,\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    const newTodo = {\r\n      id: this.state.id,\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      completed: this.props.todo.completed,\r\n    }\r\n    let newMoment = null\r\n    if (this.state.shortDate !== '' && this.state.shortTime === '') {\r\n      newMoment = moment(this.state.shortDate, 'YYYY-MM-DD')\r\n    } else if (this.state.shortDate === '' && this.state.shortTime !== '') {\r\n      newMoment = moment(this.state.shortTime, 'HH:mm')\r\n    } else if (this.state.shortDate !== '' && this.state.shortTime !== '') {\r\n      newMoment = moment(\r\n        `${this.state.shortDate} ${this.state.shortTime}`,\r\n        'YYYY-MM-DD HH:mm'\r\n      )\r\n    }\r\n    newTodo.date =\r\n      newMoment !== null ? newMoment.format('YYYY-MM-DD HH:mm Z') : ''\r\n    this.props.onSave(newTodo)\r\n    event.preventDefault()\r\n  }\r\n\r\n  render() {\r\n    const { classes, open, dialogTitle, onCancel } = this.props\r\n    return (\r\n      <Dialog open={open} onClose={() => onCancel()}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {dialogTitle && <DialogTitle>{dialogTitle}</DialogTitle>}\r\n          <DialogContent>\r\n            <TextField\r\n              name=\"id\"\r\n              label=\"ID\"\r\n              margin=\"dense\"\r\n              disabled\r\n              fullWidth\r\n              value={this.state.id}\r\n              onChange={this.handleChangeText}\r\n            />\r\n            <TextField\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              value={this.state.title}\r\n              onChange={this.handleChangeText}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              multiline\r\n              rows=\"3\"\r\n              value={this.state.description}\r\n              onChange={this.handleChangeText}\r\n            />\r\n            <div className={classes.dueContainer}>\r\n              <TextField\r\n                name=\"shortDate\"\r\n                type=\"date\"\r\n                label=\"Due Date\"\r\n                className={classes.dateInput}\r\n                margin=\"dense\"\r\n                value={this.state.shortDate}\r\n                onChange={this.handleChangeText}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n              <TextField\r\n                name=\"shortTime\"\r\n                type=\"time\"\r\n                label=\"Time\"\r\n                className={classes.timeInput}\r\n                margin=\"dense\"\r\n                value={this.state.shortTime}\r\n                onChange={this.handleChangeText}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </DialogContent>\r\n          <DialogActions className={classes.dialogAction}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Save\r\n              <SaveIcon className={classes.rightIcon} />\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  dialogAction: {\r\n    justifyContent: 'center',\r\n  },\r\n  dueContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  dateInput: {\r\n    flexGrow: 2,\r\n  },\r\n  timeInput: {\r\n    flexGrow: 1,\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n})\r\n\r\nexport default withStyles(styles)(TodoDetail)\r\n","import React, { Component, Fragment } from 'react'\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n  IconButton,\r\n} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport TodoDetail from './TodoDetail'\r\n\r\nclass TodoListItem extends Component {\r\n  state = {\r\n    openDetail: false,\r\n  }\r\n\r\n  static propTypes = {\r\n    todo: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string,\r\n      description: PropTypes.string,\r\n      date: PropTypes.string,\r\n      completed: PropTypes.bool,\r\n    }),\r\n    onToggleCompleted: PropTypes.func,\r\n    onDeleteTodo: PropTypes.func,\r\n    onUpdateTodo: PropTypes.func,\r\n  }\r\n\r\n  handleClickOpenDetail = () => {\r\n    this.setState({ openDetail: true })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({ openDetail: false })\r\n  }\r\n\r\n  handleSave = todo => {\r\n    this.props.onUpdateTodo(todo)\r\n    this.setState({ openDetail: false })\r\n  }\r\n\r\n  render() {\r\n    const { todo, onToggleCompleted, onDeleteTodo } = this.props\r\n    return (\r\n      <Fragment>\r\n        <ListItem button onClick={this.handleClickOpenDetail}>\r\n          <Checkbox\r\n            checked={todo.completed}\r\n            disableRipple\r\n            onChange={() => onToggleCompleted(todo.id)}\r\n          />\r\n          <ListItemText\r\n            primary={todo.title}\r\n            primaryTypographyProps={{\r\n              color: todo.completed ? 'textSecondary' : 'default',\r\n              noWrap: true,\r\n            }}\r\n            secondary={\r\n              todo.date && moment(todo.date, 'YYYY-MM-DD HH:mm Z').fromNow()\r\n            }\r\n            secondaryTypographyProps={{ noWrap: true }}\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton color=\"secondary\" onClick={() => onDeleteTodo(todo.id)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n        <TodoDetail\r\n          todo={todo}\r\n          open={this.state.openDetail}\r\n          dialogTitle=\"Edit Reminder\"\r\n          onCancel={this.handleCancel}\r\n          onSave={this.handleSave}\r\n        />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoListItem\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  List,\r\n  Collapse,\r\n  ListItem,\r\n  ListItemText,\r\n  Avatar,\r\n  Paper,\r\n  withStyles,\r\n} from '@material-ui/core'\r\nimport ExpandLess from '@material-ui/icons/ExpandLess'\r\nimport ExpandMore from '@material-ui/icons/ExpandMore'\r\nimport PropTypes from 'prop-types'\r\nimport TodoListItem from './TodoListItem'\r\nimport {\r\n  updateTodo,\r\n  deleteTodo,\r\n  toggleTodoCompleted,\r\n} from '../actions/todoList'\r\nimport { toggleExpandCompleted } from '../actions/expandCompleted'\r\n\r\nclass TodoList extends Component {\r\n  static propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    todoList: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string,\r\n        description: PropTypes.string,\r\n        date: PropTypes.string,\r\n        completed: PropTypes.bool,\r\n      })\r\n    ),\r\n    expandCompleted: PropTypes.bool.isRequired,\r\n    onCompletedClick: PropTypes.func.isRequired,\r\n    onToggleCompleted: PropTypes.func,\r\n    onDeleteTodo: PropTypes.func,\r\n    onUpdateTodo: PropTypes.func,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      todoList,\r\n      expandCompleted,\r\n      onCompletedClick,\r\n      onToggleCompleted,\r\n      onDeleteTodo,\r\n      onUpdateTodo,\r\n    } = this.props\r\n    const nonCompletedTodoList = todoList\r\n      ? todoList.filter(todo => !todo.completed)\r\n      : []\r\n    const completedTodoList = todoList\r\n      ? todoList.filter(todo => todo.completed)\r\n      : []\r\n    const numCompleted = completedTodoList.length\r\n    const listItem = list => {\r\n      return list.map(todo => {\r\n        return (\r\n          <TodoListItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            onToggleCompleted={onToggleCompleted}\r\n            onDeleteTodo={onDeleteTodo}\r\n            onUpdateTodo={onUpdateTodo}\r\n          />\r\n        )\r\n      })\r\n    }\r\n    return (\r\n      <div className={classes.listContainer}>\r\n        {nonCompletedTodoList.length > 0 && (\r\n          <Paper elevation={5} className={classes.todoPaper}>\r\n            <List disablePadding>{listItem(nonCompletedTodoList)}</List>\r\n          </Paper>\r\n        )}\r\n        <Paper elevation={5} className={classes.todoPaper}>\r\n          <List disablePadding>\r\n            <ListItem button onClick={onCompletedClick}>\r\n              <Avatar className={classes.countAvatar}>\r\n                {numCompleted.toString()}\r\n              </Avatar>\r\n              <ListItemText\r\n                primary=\"Completed\"\r\n                primaryTypographyProps={{ variant: 'headline', noWrap: true }}\r\n              />\r\n              {expandCompleted ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={expandCompleted} timeout=\"auto\">\r\n              <List disablePadding>{listItem(completedTodoList)}</List>\r\n            </Collapse>\r\n          </List>\r\n        </Paper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  listContainer: {\r\n    maxWidth: '800px',\r\n    width: '100%',\r\n  },\r\n  todoPaper: {\r\n    margin: '1.5em',\r\n  },\r\n  countAvatar: {\r\n    backgroundColor: '#008000',\r\n    marginRight: '1em',\r\n    marginTop: '0.5em',\r\n    marginBottom: '0.5em',\r\n  },\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todoList: state.todoList,\r\n    expandCompleted: state.expandCompleted,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCompletedClick: () => dispatch(toggleExpandCompleted()),\r\n    onToggleCompleted: id => dispatch(toggleTodoCompleted(id)),\r\n    onDeleteTodo: id => dispatch(deleteTodo(id)),\r\n    onUpdateTodo: todo => dispatch(updateTodo(todo)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(TodoList))\r\n","import { TOGGLE_EXPAND_COMPLETED } from \"../constants/actionTypes\";\r\n\r\nexport const toggleExpandCompleted = () => {\r\n  return {\r\n    type: TOGGLE_EXPAND_COMPLETED\r\n  };\r\n};\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const TOGGLE_TODO_COMPLETED = \"TOGGLE_TODO_COMPLETED\";\r\n\r\nexport const TOGGLE_EXPAND_COMPLETED = \"TOGGLE_EXPAND_COMPLETED\";\r\n","import {\r\n  ADD_TODO,\r\n  UPDATE_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO_COMPLETED\r\n} from \"../constants/actionTypes\";\r\n\r\nexport const addTodo = todo => {\r\n  return {\r\n    type: ADD_TODO,\r\n    todo\r\n  };\r\n};\r\n\r\nexport const updateTodo = todo => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    todo\r\n  };\r\n};\r\n\r\nexport const deleteTodo = id => {\r\n  return {\r\n    type: DELETE_TODO,\r\n    id\r\n  };\r\n};\r\n\r\nexport const toggleTodoCompleted = id => {\r\n  return {\r\n    type: TOGGLE_TODO_COMPLETED,\r\n    id\r\n  };\r\n};\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport PropTypes from 'prop-types'\r\nimport TodoDetail from './TodoDetail'\r\nimport uniqid from 'uniqid'\r\nimport { addTodo } from '../actions/todoList'\r\n\r\nclass TodoAdd extends Component {\r\n  state = {\r\n    openAddTodo: false,\r\n    todoID: uniqid(),\r\n  }\r\n\r\n  static propTypes = {\r\n    onAddTodo: PropTypes.func,\r\n  }\r\n\r\n  handleClickAdd = () => {\r\n    this.setState({ openAddTodo: true })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    // console.log(\"cancel\", this.state.todoID);\r\n    this.setState({ openAddTodo: false })\r\n  }\r\n\r\n  handleSave = todo => {\r\n    // console.log(\"save\", this.state.todoID, todo);\r\n    this.setState({ openAddTodo: false, todoID: uniqid() })\r\n    this.props.onAddTodo(todo)\r\n  }\r\n\r\n  render() {\r\n    const todo = {\r\n      id: this.state.todoID,\r\n      title: '',\r\n      description: '',\r\n      date: '',\r\n      completed: false,\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Button\r\n          onClick={this.handleClickAdd}\r\n          type=\"submit\"\r\n          variant=\"extendedFab\"\r\n          color=\"primary\"\r\n        >\r\n          <AddIcon />\r\n          Add Reminder\r\n        </Button>\r\n        <TodoDetail\r\n          todo={todo}\r\n          open={this.state.openAddTodo}\r\n          dialogTitle=\"Add Reminder\"\r\n          onCancel={this.handleCancel}\r\n          onSave={this.handleSave}\r\n        />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddTodo: todo => dispatch(addTodo(todo)),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(TodoAdd)\r\n","import React, { Component } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport TodoAdd from \"./components/TodoAdd\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1 className=\"App-title\">Reminders React</h1>\r\n        </header>\r\n        <TodoList />\r\n        <div className=\"add-button\">\r\n          <TodoAdd />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n  todoList: [],\r\n  expandCompleted: true\r\n};\r\n","import {\r\n  ADD_TODO,\r\n  UPDATE_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO_COMPLETED\r\n} from \"../constants/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nconst todoList = (state = initialState.todoList, action) => {\r\n  const newTodoList = state.map(todo => ({ ...todo }));\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      newTodoList.push(action.todo);\r\n      return newTodoList;\r\n    case UPDATE_TODO:\r\n      const idxTodo = newTodoList.findIndex(todo => todo.id === action.todo.id);\r\n      if (idxTodo === -1) return state;\r\n      newTodoList.splice(idxTodo, 1, action.todo);\r\n      return newTodoList;\r\n    case DELETE_TODO:\r\n      const deletedTodoList = newTodoList.filter(todo => todo.id !== action.id);\r\n      return deletedTodoList;\r\n    case TOGGLE_TODO_COMPLETED:\r\n      const foundTodo = newTodoList.find(todo => todo.id === action.id);\r\n      if (foundTodo === undefined) return state;\r\n      foundTodo.completed = !foundTodo.completed;\r\n      return newTodoList;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoList;\r\n","import initialState from \"./initialState\";\r\nimport { TOGGLE_EXPAND_COMPLETED } from \"../constants/actionTypes\";\r\n\r\nconst expandCompleted = (state = initialState.expandCompleted, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_EXPAND_COMPLETED:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default expandCompleted;\r\n","import { combineReducers } from \"redux\";\r\nimport todoList from \"./todoList\";\r\nimport expandCompleted from \"./expandCompleted\";\r\n\r\nexport default combineReducers({\r\n  todoList,\r\n  expandCompleted\r\n});\r\n","import reducer from \"../reducers/index\";\r\nimport { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport configureStore from \"./store/configureStore\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst { store, persistor } = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}